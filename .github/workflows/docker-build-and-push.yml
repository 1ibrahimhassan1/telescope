name: Docker Build and Push

on:
  workflow_call:
    inputs:
      deploy_tag:
        description: 'The deploy tag to use, one of `staging` or `production`'
        required: true
        type: string
    secrets:
      docker_username:
        description: 'The Docker Registry username'
        required: true
      docker_password:
        description: 'The Docker Registry password'
        required: true

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: docker.cdot.systems
    strategy:
      matrix:
        include:
          # TODO
          # - context: src/api
          #  image: telescope-base
          # - context: src/docs
          #  image: docs
          - context: src/api/feed-discovery
            image: feed-discovery
          - context: src/web
            image: nginx
          - context: src/api/planet
            image: planet
          - context: src/api/posts
            image: posts
          - context: src/api/dependency-discovery
            image: dependency-discovery
          - context: src/api/status
            image: status
          - context: src/api/parser
            image: parser
          - context: src/api/image
            image: image
          - context: src/api/search
            image: search
          - context: src/api/sso
            image: sso
    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          registry: https://${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_password }}

      - uses: docker/build-push-action@v2
        env:
          DOCKER_REPO: ${{ env.DOCKER_REGISTRY }}/${{ matrix.image }}
        with:
          context: ${{ matrix.context }}
          # Use our CDOT Docker Registry to cache image builds
          cache-from: type=registry,ref=${{ env.DOCKER_REPO }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_REPO }}:buildcache,mode=max
          tags: ${{ env.DOCKER_REPO }}:${{ inputs.deploy_tag }}, ${{ env.DOCKER_REPO }}:latest
          push: true
